android.support.v4.app.ActivityCompat -> android.support.v4.app.a:
    void finishAfterTransition(android.app.Activity) -> a
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.b:
    android.support.v4.app.Fragment val$inFragment -> a
    void finishAfterTransition(android.app.Activity) -> a
    android.view.View getView() -> a
    java.lang.String getTransitionName(android.view.View) -> a
    java.lang.Object cloneTransition(java.lang.Object) -> a
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map,android.view.View) -> a
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> a
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    void setEpicenter(java.lang.Object,android.view.View) -> a
    void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.ArrayList) -> a
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> a
    void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> a
    android.graphics.Rect getBoundsOnScreen(android.view.View) -> b
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> a
    void findNamedViews(java.util.Map,android.view.View) -> a
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> a
    void removeTargets(java.lang.Object,java.util.ArrayList) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> b
    boolean hasSimpleTarget(android.transition.Transition) -> a
    boolean isNullOrEmpty(java.util.List) -> a
    void access$000(java.util.ArrayList,android.view.View) -> b
    android.graphics.Rect access$100(android.view.View) -> c
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> a
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> a
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> b
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
    java.lang.String getMediaId(java.lang.Object) -> b
    java.lang.CharSequence getTitle(java.lang.Object) -> c
    java.lang.CharSequence getSubtitle(java.lang.Object) -> d
    java.lang.CharSequence getDescription(java.lang.Object) -> e
    android.graphics.Bitmap getIconBitmap(java.lang.Object) -> f
    android.net.Uri getIconUri(java.lang.Object) -> g
    android.os.Bundle getExtras(java.lang.Object) -> h
    void writeToParcel(java.lang.Object,android.os.Parcel,int) -> a
    java.lang.Object fromParcel(android.os.Parcel) -> a
    java.lang.Object newInstance() -> b
    void setMediaId(java.lang.Object,java.lang.String) -> a
    void setTitle(java.lang.Object,java.lang.CharSequence) -> a
    void setSubtitle(java.lang.Object,java.lang.CharSequence) -> b
    void setDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> a
    void setIconUri(java.lang.Object,android.net.Uri) -> a
    void setExtras(java.lang.Object,android.os.Bundle) -> a
    java.lang.Object build(java.lang.Object) -> i
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> b
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> c
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> b
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
    int getAbsoluteGravity(int,int) -> a
    void startTracking(android.view.KeyEvent) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> b
    boolean metaStateHasNoModifiers(int) -> b
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
    int getSource(android.view.MotionEvent) -> b
    float getAxisValue(android.view.MotionEvent,int) -> e
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
    boolean isOpaque(android.view.View) -> d
    int getOverScrollMode(android.view.View) -> e
    long getFrameTime() -> d
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> f
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
    void postInvalidateOnAnimation(android.view.View) -> g
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> h
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> i
    void stopNestedScroll(android.view.View) -> j
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> j
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> k
    java.lang.CharSequence getContentDescription(java.lang.Object) -> l
    java.lang.CharSequence getPackageName(java.lang.Object) -> m
    java.lang.CharSequence getText(java.lang.Object) -> n
    boolean isCheckable(java.lang.Object) -> o
    boolean isChecked(java.lang.Object) -> p
    boolean isClickable(java.lang.Object) -> q
    boolean isEnabled(java.lang.Object) -> r
    boolean isFocusable(java.lang.Object) -> s
    boolean isFocused(java.lang.Object) -> t
    boolean isLongClickable(java.lang.Object) -> u
    boolean isPassword(java.lang.Object) -> v
    boolean isScrollable(java.lang.Object) -> w
    boolean isSelected(java.lang.Object) -> x
    void setClassName(java.lang.Object,java.lang.CharSequence) -> d
    void setParent(java.lang.Object,android.view.View) -> c
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.String getViewIdResourceName(java.lang.Object) -> y
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
    void setMaxScrollX(java.lang.Object,int) -> b
    void setMaxScrollY(java.lang.Object,int) -> c
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> z
    void finish(java.lang.Object) -> A
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> B
    boolean onAbsorb(java.lang.Object,int) -> d
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.c:
    boolean SUPPORTS_TRANSITIONS -> n
    android.support.v4.app.FragmentManagerImpl mManager -> o
    android.support.v4.app.BackStackRecord$Op mHead -> a
    android.support.v4.app.BackStackRecord$Op mTail -> p
    int mNumOp -> b
    int mTransition -> c
    int mTransitionStyle -> d
    boolean mAddToBackStack -> e
    java.lang.String mName -> f
    boolean mCommitted -> q
    int mIndex -> g
    int mBreadCrumbTitleRes -> h
    java.lang.CharSequence mBreadCrumbTitleText -> i
    int mBreadCrumbShortTitleRes -> j
    java.lang.CharSequence mBreadCrumbShortTitleText -> k
    java.util.ArrayList mSharedElementSourceNames -> l
    java.util.ArrayList mSharedElementTargetNames -> m
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment) -> a
    void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment) -> b
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> b
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> a
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> a
    java.lang.String getName() -> b
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> a
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> a
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> b
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> a
    java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap,android.view.View) -> a
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> a
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> a
    void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList) -> a
    void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> a
    android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> a
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> a
    android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> b
    void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> a
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> a
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> a
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> b
    android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> a
    void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> a
    void access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> a
    void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.d:
    android.view.View val$sceneRoot -> a
    java.lang.Object val$sharedElementTransition -> b
    java.util.ArrayList val$sharedElementTargets -> c
    android.support.v4.app.BackStackRecord$TransitionState val$state -> d
    boolean val$isBack -> e
    android.support.v4.app.Fragment val$inFragment -> f
    android.support.v4.app.Fragment val$outFragment -> g
    android.support.v4.app.BackStackRecord this$0 -> h
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.e:
    android.view.View val$sceneRoot -> a
    android.support.v4.app.BackStackRecord$TransitionState val$state -> b
    int val$containerId -> c
    java.lang.Object val$transition -> d
    android.support.v4.app.BackStackRecord this$0 -> e
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.f:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> j
    boolean sCheckedField -> k
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
    void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> a
    void setScrollX(java.lang.Object,int) -> a
    void setScrollY(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.g:
    android.support.v4.util.ArrayMap nameOverrides -> a
    java.util.ArrayList hiddenFragmentViews -> b
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> c
    android.view.View nonExistentView -> d
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    java.util.ArrayList mSharedElementSourceNames -> j
    java.util.ArrayList mSharedElementTargetNames -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.h:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> L
    java.lang.Object USE_DEFAULT_TRANSITION -> M
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mMenuVisible -> N
    boolean mCalled -> D
    int mNextAnim -> E
    android.view.ViewGroup mContainer -> F
    android.view.View mView -> G
    android.view.View mInnerView -> H
    boolean mDeferStart -> I
    boolean mUserVisibleHint -> J
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> K
    boolean mLoadersStarted -> O
    boolean mCheckedForLoaderManager -> P
    java.lang.Object mReturnTransition -> Q
    java.lang.Object mReenterTransition -> R
    java.lang.Object mSharedElementReturnTransition -> S
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    android.support.v4.app.FragmentManager getChildFragmentManager() -> d
    boolean isAdded() -> e
    boolean isDetached() -> f
    boolean isHidden() -> g
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> h
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> i
    void onResume() -> j
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> k
    void onStop() -> l
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> m
    void onDestroy() -> n
    void initState() -> o
    void onDetach() -> p
    void onDestroyOptionsMenu() -> q
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> a
    java.lang.Object getEnterTransition() -> r
    java.lang.Object getReturnTransition() -> s
    java.lang.Object getExitTransition() -> t
    java.lang.Object getReenterTransition() -> u
    java.lang.Object getSharedElementEnterTransition() -> v
    java.lang.Object getSharedElementReturnTransition() -> w
    boolean getAllowEnterTransitionOverlap() -> x
    boolean getAllowReturnTransitionOverlap() -> y
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> z
    void performCreate(android.os.Bundle) -> f
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> g
    void performStart() -> A
    void performResume() -> B
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> C
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean performPrepareOptionsMenu(android.view.Menu) -> a
    boolean performOptionsItemSelected(android.view.MenuItem) -> b
    boolean performContextItemSelected(android.view.MenuItem) -> c
    void performOptionsMenuClosed(android.view.Menu) -> b
    void performSaveInstanceState(android.os.Bundle) -> h
    void performPause() -> D
    void performStop() -> E
    void performReallyStop() -> F
    void performDestroyView() -> G
    void performDestroy() -> H
android.support.v4.app.Fragment$1 -> android.support.v4.app.i:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
    boolean hasView() -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.j:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.k:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.l:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> e
    boolean mCreated -> f
    boolean mResumed -> g
    boolean mStopped -> c
    boolean mReallyStopped -> h
    boolean mRetaining -> d
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> k
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void supportFinishAfterTransition() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> b
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.m:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.n:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
    boolean hasView() -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.o:
    java.util.ArrayList fragments -> a
    android.support.v4.util.SimpleArrayMap loaders -> b
android.support.v4.app.FragmentContainer -> android.support.v4.app.p:
    android.view.View findViewById(int) -> a
    boolean hasView() -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.q:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.r:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.s:
    boolean HONEYCOMB -> f
    java.util.ArrayList mPendingActions -> g
    java.lang.Runnable[] mTmpActions -> h
    boolean mExecutingActions -> i
    java.util.ArrayList mActive -> a
    java.util.ArrayList mAdded -> b
    java.util.ArrayList mAvailIndices -> j
    java.util.ArrayList mBackStack -> k
    java.util.ArrayList mCreatedMenus -> l
    java.util.ArrayList mBackStackIndices -> m
    java.util.ArrayList mAvailBackStackIndices -> n
    int mCurState -> c
    android.support.v4.app.FragmentActivity mActivity -> d
    android.support.v4.app.FragmentContainer mContainer -> e
    android.support.v4.app.Fragment mParent -> o
    boolean mStateSaved -> p
    boolean mDestroyed -> q
    boolean mHavePendingDeferredStart -> r
    android.os.Bundle mStateBundle -> s
    android.util.SparseArray mStateArray -> t
    java.lang.Runnable mExecCommit -> u
    android.view.animation.Interpolator DECELERATE_QUINT -> v
    android.view.animation.Interpolator DECELERATE_CUBIC -> w
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> f
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> g
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> h
    void dispatchCreate() -> i
    void dispatchActivityCreated() -> j
    void dispatchStart() -> k
    void dispatchResume() -> l
    void dispatchPause() -> m
    void dispatchStop() -> n
    void dispatchReallyStop() -> o
    void dispatchDestroyView() -> p
    void dispatchDestroy() -> q
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> r
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory() -> s
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.u:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.v:
    int[] Fragment -> a
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.w:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> c
    int mIndex -> d
    boolean mFromLayout -> e
    int mFragmentId -> f
    int mContainerId -> g
    java.lang.String mTag -> h
    boolean mRetainInstance -> i
    boolean mDetached -> j
    android.os.Bundle mArguments -> k
    android.os.Bundle mSavedFragmentState -> a
    android.support.v4.app.Fragment mInstance -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.x:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> b
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> c
    boolean mAttached -> d
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.y:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.z:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.view.ViewParent mNestedScrollingParent -> e
    boolean mIsNestedScrollingEnabled -> f
    int[] mTempNestedScrollConsumed -> g
    int mNestedScrollAxes -> h
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
    void setNestedScrollingEnabled(boolean) -> a
    boolean isNestedScrollingEnabled() -> a
    boolean hasNestedScrollingParent() -> b
    boolean startNestedScroll(int) -> a
    void stopNestedScroll() -> c
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> a
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> a
    boolean dispatchNestedFling(float,float,boolean) -> a
    boolean dispatchNestedPreFling(float,float) -> a
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> a
    int getNestedScrollAxes() -> d
    boolean isFinished() -> e
    int getCurrX() -> f
    int getCurrY() -> g
    int getFinalX() -> h
    int getFinalY() -> i
    float getCurrVelocity() -> j
    boolean computeScrollOffset() -> k
android.support.v4.app.FragmentTransaction -> android.support.v4.app.aa:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.ab:
    android.graphics.Rect val$epicenter -> a
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.ac:
    android.view.View val$container -> a
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> b
    java.util.Map val$nameOverrides -> c
    java.util.Map val$renamedViews -> d
    android.transition.Transition val$enterTransition -> e
    java.util.ArrayList val$enteringViews -> f
    android.view.View val$nonExistentView -> g
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.ad:
    android.graphics.Rect mEpicenter -> a
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> b
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.ae:
    android.view.View val$sceneRoot -> a
    android.transition.Transition val$enterTransition -> b
    android.view.View val$nonExistentView -> c
    java.util.ArrayList val$enteringViews -> d
    android.transition.Transition val$exitTransition -> e
    java.util.ArrayList val$exitingViews -> f
    android.transition.Transition val$sharedElementTransition -> g
    java.util.ArrayList val$sharedElementTargets -> h
    java.util.Map val$renamedViews -> i
    java.util.ArrayList val$hiddenViews -> j
    android.transition.Transition val$overallTransition -> k
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.af:
    android.view.View epicenter -> a
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.ag:
    android.view.View getView() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.ah:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ai:
    android.support.v4.util.SparseArrayCompat mLoaders -> d
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> e
    java.lang.String mWho -> a
    android.support.v4.app.FragmentActivity mActivity -> f
    boolean mStarted -> b
    boolean mRetaining -> c
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.aj:
    boolean mStarted -> a
    boolean mRetaining -> c
    boolean mRetainingStarted -> d
    boolean mReportNextStart -> b
    boolean mDestroyed -> e
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ak:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.al:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.am:
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompat -> android.support.v4.app.an:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> b
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> b
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> a
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.ao:
    android.os.Bundle mExtras -> a
    android.support.v4.app.RemoteInput[] mRemoteInputs -> b
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> d
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> e
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> f
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.ap:
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.aq:
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.ar:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    boolean mShowWhen -> e
    int mProgressMax -> f
    int mProgress -> g
    boolean mProgressIndeterminate -> h
    java.util.ArrayList mActions -> i
    android.app.Notification mNotification -> j
    java.util.ArrayList mPeople -> k
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.app.Notification build() -> a
    android.support.v4.app.NotificationCompat$BuilderExtender getExtender() -> b
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> c
android.support.v4.app.NotificationCompat$BuilderExtender -> android.support.v4.app.as:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
    void onDeviceStateChange(com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.at:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.au:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.av:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 -> android.support.v4.app.aw:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.ax:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.ay:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.az:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.ba:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.bb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.bc:
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.bd:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.v4.app.be:
    android.app.Notification$Builder b -> a
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.bf:
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> d
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> f
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.bg:
android.support.v4.app.NotificationCompatIceCreamSandwich$Builder -> android.support.v4.app.bh:
    android.app.Notification$Builder b -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.bi:
    java.lang.Object sExtrasLock -> a
    java.lang.reflect.Field sExtrasField -> b
    boolean sExtrasFieldAccessFailed -> c
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> a
    android.os.Bundle getExtras(android.app.Notification) -> a
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.bj:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.bk:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.RemoteInput -> android.support.v4.app.bl:
    java.lang.String mResultKey -> a
    java.lang.CharSequence mLabel -> b
    java.lang.CharSequence[] mChoices -> c
    boolean mAllowFreeFormInput -> d
    android.os.Bundle mExtras -> e
    java.lang.String getResultKey() -> a
    java.lang.CharSequence getLabel() -> b
    java.lang.CharSequence[] getChoices() -> c
    boolean getAllowFreeFormInput() -> d
    android.os.Bundle getExtras() -> e
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.bm:
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.bn:
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.bo:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.bp:
    java.lang.String getResultKey() -> a
    java.lang.CharSequence getLabel() -> b
    java.lang.CharSequence[] getChoices() -> c
    boolean getAllowFreeFormInput() -> d
    android.os.Bundle getExtras() -> e
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.bq:
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.br:
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    java.lang.String mMediaId -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    java.lang.CharSequence mDescription -> d
    android.graphics.Bitmap mIcon -> e
    android.net.Uri mIconUri -> f
    android.os.Bundle mExtras -> g
    java.lang.Object mDescriptionObj -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    java.lang.Object getMediaDescription() -> a
    android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> a
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.a:
    android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.b:
    java.lang.String mMediaId -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    java.lang.CharSequence mDescription -> d
    android.graphics.Bitmap mIcon -> e
    android.net.Uri mIconUri -> f
    android.os.Bundle mExtras -> g
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> b
    android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> c
    android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> a
    android.support.v4.media.MediaDescriptionCompat build() -> a
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> a
    android.os.Bundle mBundle -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.c:
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    int mRatingStyle -> a
    float mRatingValue -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.d:
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.RatingCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    android.support.v4.media.MediaDescriptionCompat mDescription -> a
    long mId -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.a:
    android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    android.os.ResultReceiver mResultReceiver -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.b:
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    java.lang.Object mInner -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.c:
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    int volumeType -> a
    int audioStream -> b
    int controlType -> c
    int maxVolume -> d
    int currentVolume -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.d:
    android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    int mState -> a
    long mPosition -> b
    long mBufferedPosition -> c
    float mSpeed -> d
    long mActions -> e
    java.lang.CharSequence mErrorMessage -> f
    long mUpdateTime -> g
    java.util.List mCustomActions -> h
    long mActiveItemId -> i
    android.os.Bundle mExtras -> j
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.e:
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    java.lang.String mAction -> a
    java.lang.CharSequence mName -> b
    int mIcon -> c
    android.os.Bundle mExtras -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.f:
    android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.a.a:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.a.b:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.a.c:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.ArrayMap -> android.support.v4.b.a:
    android.support.v4.util.MapCollections mCollections -> c
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    boolean retainAll(java.util.Collection) -> a
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.b.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.b.c:
    int[] EMPTY_INTS -> a
    java.lang.Object[] EMPTY_OBJECTS -> b
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.LogWriter -> android.support.v4.b.d:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.b.e:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> a
    android.support.v4.util.MapCollections$KeySet mKeySet -> b
    android.support.v4.util.MapCollections$ValuesCollection mValues -> c
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.b.f:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.b.g:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.b.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.b.i:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.b.j:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.b.k:
    java.lang.Object[] mBaseCache -> c
    int mBaseCacheSize -> d
    java.lang.Object[] mTwiceBaseCache -> e
    int mTwiceBaseCacheSize -> f
    int[] mHashes -> g
    java.lang.Object[] mArray -> a
    int mSize -> b
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> a
    int indexOfValue(java.lang.Object) -> b
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.b.l:
    int[] mKeys -> a
    java.lang.Object[] mValues -> b
    android.support.v4.util.SparseArrayCompat clone() -> a
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> a
    java.lang.Object DEFAULT_DELEGATE -> b
    java.lang.Object mBridge -> c
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.c:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.e:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.g:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.h:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.i:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.j:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.k:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.l:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.m:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.n:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.o:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.p:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
android.support.v4.view.LayoutInflaterCompat -> android.support.v4.view.q:
    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl IMPL -> a
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl -> android.support.v4.view.r:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 -> android.support.v4.view.s:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 -> android.support.v4.view.t:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper -> android.support.v4.view.u:
    android.support.v4.view.LayoutInflaterFactory mDelegateFactory -> a
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    java.lang.String toString() -> toString
android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC -> android.support.v4.view.v:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.view.LayoutInflaterFactory -> android.support.v4.view.w:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.x:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
    int getSource(android.view.MotionEvent) -> d
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.y:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl -> android.support.v4.view.z:
    int getSource(android.view.MotionEvent) -> b
android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl -> android.support.v4.view.aa:
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
    int getSource(android.view.MotionEvent) -> b
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.NestedScrollingChild -> android.support.v4.view.ac:
    void stopNestedScroll() -> stopNestedScroll
android.support.v4.view.NestedScrollingParent -> android.support.v4.view.ad:
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    int getCount() -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.ScrollingView -> android.support.v4.view.af:
    int computeHorizontalScrollRange() -> a
    int computeHorizontalScrollOffset() -> b
    int computeHorizontalScrollExtent() -> c
    int computeVerticalScrollRange() -> d
    int computeVerticalScrollOffset() -> e
    int computeVerticalScrollExtent() -> f
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.ag:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
    void stopNestedScroll(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.al:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.am:
    int getOverScrollMode(android.view.View) -> b
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.an:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ao:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ap:
    void postInvalidateOnAnimation(android.view.View) -> d
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> c
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.aq:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> f
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ar:
    void setImportantForAccessibility(android.view.View,int) -> c
android.support.v4.view.ViewCompat$LollipopViewCompatImpl -> android.support.v4.view.as:
    void stopNestedScroll(android.view.View) -> g
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.at:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> d
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> f
    boolean isOpaque(android.view.View) -> a
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
    void stopNestedScroll(android.view.View) -> g
    long getFrameTime() -> a
    boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int) -> a
    boolean canScrollingViewScrollVertically(android.support.v4.view.ScrollingView,int) -> b
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.support.v4.view.ViewPager$PagerObserver mObserver -> j
    int mPageMargin -> k
    android.graphics.drawable.Drawable mMarginDrawable -> l
    int mTopPageBounds -> m
    int mBottomPageBounds -> n
    float mFirstOffset -> o
    float mLastOffset -> p
    int mChildHeightMeasureSpec -> q
    boolean mInLayout -> r
    boolean mScrollingCacheEnabled -> s
    boolean mPopulatePending -> t
    int mOffscreenPageLimit -> u
    boolean mIsBeingDragged -> v
    boolean mIsUnableToDrag -> w
    int mGutterSize -> x
    float mLastMotionX -> y
    float mLastMotionY -> z
    float mInitialMotionX -> A
    float mInitialMotionY -> B
    int mActivePointerId -> C
    android.view.VelocityTracker mVelocityTracker -> D
    boolean mFirstLayout -> E
    boolean mCalledSuper -> F
    int mDecorChildCount -> G
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> H
    java.lang.Runnable mEndScrollRunnable -> I
    int mScrollState -> J
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener$2b51a269(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnAdapterChangeListener$2b51a269
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener$7c5ced3(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnPageChangeListener$7c5ced3
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> b
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.au:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.av:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.aw:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ax:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ay:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.az:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ba:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.bb:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> a
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.bc:
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.bd:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl -> android.support.v4.view.be:
android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl -> android.support.v4.view.bf:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.a.b:
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl -> android.support.v4.view.a.c:
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.e:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    int getActions() -> b
    void addAction(int) -> a
    void setParent(android.view.View) -> a
    void getBoundsInParent(android.graphics.Rect) -> a
    void getBoundsInScreen(android.graphics.Rect) -> b
    boolean isCheckable() -> c
    boolean isChecked() -> d
    boolean isFocusable() -> e
    boolean isFocused() -> f
    boolean isSelected() -> g
    boolean isClickable() -> h
    boolean isLongClickable() -> i
    boolean isEnabled() -> j
    boolean isPassword() -> k
    boolean isScrollable() -> l
    void setScrollable(boolean) -> a
    java.lang.CharSequence getPackageName() -> m
    java.lang.CharSequence getClassName() -> n
    void setClassName(java.lang.CharSequence) -> a
    java.lang.CharSequence getText() -> o
    java.lang.CharSequence getContentDescription() -> p
    java.lang.String getViewIdResourceName() -> q
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.a.f:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl -> android.support.v4.view.a.g:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.h:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setParent(java.lang.Object,android.view.View) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.i:
    int getActions(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void setParent(java.lang.Object,android.view.View) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isSelected(java.lang.Object) -> o
    boolean isClickable(java.lang.Object) -> h
    boolean isLongClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> i
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> e
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.j:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.k:
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.l:
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.n:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.o:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.p:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.q:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.r:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.s:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.t:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.u:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    void setScrollable(boolean) -> a
    void setScrollX(int) -> a
    void setScrollY(int) -> b
    void setMaxScrollX(int) -> c
    void setMaxScrollY(int) -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.v:
    void setScrollX(java.lang.Object,int) -> a
    void setScrollY(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.w:
    void setMaxScrollX(java.lang.Object,int) -> c
    void setMaxScrollY(java.lang.Object,int) -> d
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.x:
    void setScrollable(java.lang.Object,boolean) -> a
    void setScrollX(java.lang.Object,int) -> a
    void setScrollY(java.lang.Object,int) -> b
    void setMaxScrollX(java.lang.Object,int) -> c
    void setMaxScrollY(java.lang.Object,int) -> d
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.y:
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    boolean CAN_HIDE_DESCENDANTS -> b
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> c
    int mScrimColor -> d
    float mScrimOpacity -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    float mInitialMotionX -> o
    float mInitialMotionY -> p
    android.graphics.drawable.Drawable mStatusBarBackground -> q
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener$1b20c458(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setDrawerListener$1b20c458
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void updateChildrenImportantForAccessibility(android.view.View,boolean) -> a
    void setDrawerViewOffset(android.view.View,float) -> a
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> l
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibility(android.view.View) -> m
    int[] access$100() -> c
    boolean access$400(android.view.View) -> k
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.a:
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 -> android.support.v4.widget.b:
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase -> android.support.v4.widget.c:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.d:
    int gravity -> a
    float onScreen -> b
    boolean knownOpen -> c
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.e:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.f:
    int mAbsGravity -> a
    java.lang.Runnable mPeekRunnable -> b
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.g:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onPull(float,float) -> a
    boolean onRelease() -> c
    boolean onAbsorb(int) -> a
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.h:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.i:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.j:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl -> android.support.v4.widget.k:
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.NestedScrollView -> android.support.v4.widget.NestedScrollView:
    long mLastScroll -> a
    android.graphics.Rect mTempRect -> b
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop -> c
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom -> d
    int mLastMotionY -> e
    boolean mIsLayoutDirty -> f
    boolean mIsLaidOut -> g
    android.view.View mChildToScrollTo -> h
    boolean mIsBeingDragged -> i
    android.view.VelocityTracker mVelocityTracker -> j
    boolean mFillViewport -> k
    boolean mSmoothScrollingEnabled -> l
    int mActivePointerId -> m
    int[] mScrollOffset -> n
    int[] mScrollConsumed -> o
    int mNestedYOffset -> p
    android.support.v4.widget.NestedScrollView$SavedState mSavedState -> q
    android.support.v4.app.FragmentTabHost$TabInfo mParentHelper$39f2dfb6 -> r
    android.support.v4.app.FragmentTabHost$TabInfo mChildHelper$5df96aa -> s
    float mVerticalScrollFactor -> t
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    int getMaxScrollAmount() -> getMaxScrollAmount
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean canScroll() -> a
    void setFillViewport(boolean) -> setFillViewport
    void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    void onMeasure(int,int) -> onMeasure
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean inChild(int,int) -> c
    void initOrResetVelocityTracker() -> b
    void initVelocityTrackerIfNotExists() -> c
    void recycleVelocityTracker() -> d
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> a
    int getScrollRange() -> getScrollRange
    android.view.View findFocusableViewInBounds(boolean,int,int) -> a
    boolean pageScroll(int) -> a
    boolean fullScroll(int) -> b
    boolean scrollAndFocus(int,int,int) -> a
    boolean arrowScroll(int) -> c
    boolean isOffScreen(android.view.View) -> a
    boolean isWithinDeltaOfScreen(android.view.View,int,int) -> a
    void doScrollY(int) -> e
    void smoothScrollBy(int,int) -> a
    void smoothScrollTo(int,int) -> b
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void measureChild(android.view.View,int,int) -> measureChild
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void computeScroll() -> computeScroll
    void scrollToChild(android.view.View) -> b
    boolean scrollToChildRect(android.graphics.Rect,boolean) -> a
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> a
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void requestLayout() -> requestLayout
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAttachedToWindow() -> onAttachedToWindow
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean isViewDescendantOf(android.view.View,android.view.View) -> a
    void fling(int) -> d
    void flingWithNestedDispatch(int) -> f
    void endDrag() -> e
    void scrollTo(int,int) -> scrollTo
    void ensureGlows() -> f
    void draw(android.graphics.Canvas) -> draw
    int clamp(int,int,int) -> b
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int access$000(android.support.v4.widget.NestedScrollView) -> a
android.support.v4.widget.NestedScrollView$AccessibilityDelegate -> android.support.v4.widget.l:
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.NestedScrollView$SavedState:
    int scrollPosition -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.m:
    android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.NestedScrollView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> a
    int mCoveredFadeColor -> b
    android.graphics.drawable.Drawable mShadowDrawableLeft -> c
    android.graphics.drawable.Drawable mShadowDrawableRight -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.ViewDragHelper mDragHelper -> o
    boolean mPreservedOpenState -> p
    boolean mFirstLayout -> q
    android.graphics.Rect mTmpRect -> r
    java.util.ArrayList mPostedRunnables -> s
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> t
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener$14b5545(android.support.v4.app.FragmentContainer) -> setPanelSlideListener$14b5545
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> f
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.n:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.o:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.p:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.q:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.r:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.s:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.t:
    int mDragState -> a
    int mActivePointerId -> b
    float[] mInitialMotionX -> c
    float[] mInitialMotionY -> d
    float[] mLastMotionX -> e
    float[] mLastMotionY -> f
    int[] mInitialEdgesTouched -> g
    int[] mEdgeDragsInProgress -> h
    int[] mEdgeDragsLocked -> i
    int mPointersDown -> j
    android.view.VelocityTracker mVelocityTracker -> k
    int mTrackingEdges -> l
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> m
    android.view.View mCapturedView -> n
    boolean mReleaseInProgress -> o
    android.view.ViewGroup mParentView -> p
    java.lang.Runnable mSetIdleRunnable -> q
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> b
    int getTouchSlop() -> c
    void cancel() -> d
    void abort() -> e
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> f
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> g
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.u:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.v:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.dsi.ant.plugins.antplus.common.FitFileCommon -> com.dsi.ant.plugins.antplus.common.FitFileCommon:
    java.lang.String TAG -> a
    java.lang.String access$000() -> a
com.dsi.ant.plugins.antplus.common.FitFileCommon$FitFile -> com.dsi.ant.plugins.antplus.common.FitFileCommon$FitFile:
    byte[] mFitFileByteArray -> a
    short mFitFileType -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.dsi.ant.plugins.antplus.common.FitFileCommon$FitFile$1 -> com.dsi.ant.plugins.antplus.common.a:
    com.dsi.ant.plugins.antplus.common.FitFileCommon$FitFile createFromParcel(android.os.Parcel) -> a
    com.dsi.ant.plugins.antplus.common.FitFileCommon$FitFile[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc -> com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc:
    java.lang.String TAG -> l
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$IRawPowerOnlyDataReceiver mRawPowerOnlyDataReceiver -> m
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$IInstantaneousCadenceReceiver mInstantaneousCadenceReceiver -> n
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mRequestCalibrationMessageReceiver$7a1f38b0 -> o
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mRequestAutoZeroStatusReceiver$515ac9a4 -> p
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$ICalculatedPowerReceiver mCalculatedPowerReceiver -> q
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$ICalculatedTorqueReceiver mCalculatedTorqueReceiver -> r
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$ICalculatedCrankCadenceReceiver mCalculatedCrankCadenceReceiver -> s
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalculatedWheelSpeedReceiver mCalculatedWheelSpeedReceiver -> t
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalculatedWheelDistanceReceiver mCalculatedWheelDistanceReceiver -> u
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mRequestMeasurementOutputDataReceiver$5f701864 -> v
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mRequestCrankParametersReceiver$7abdb54e -> w
    android.os.Handler pccHandler -> x
    java.lang.Runnable unsubscribeRequestCalibrationMessageReceiver -> y
    java.lang.Runnable unsubscribeRequestAutoZeroStatusReceiver -> z
    java.lang.Runnable unsubscibeRequestMeasurementOutputDataReceiver -> A
    java.lang.Runnable unsubscribeRequestCrankParametersReceiver -> B
    int getRequiredServiceVersionForBind() -> a
    com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle requestAccess(android.content.Context,int,int,com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IPluginAccessResultReceiver,com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IDeviceStateChangeReceiver) -> a
    android.content.Intent getServiceBindIntent() -> b
    void handlePluginEvent(android.os.Message) -> a
    void subscribeRawPowerOnlyDataEvent(com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$IRawPowerOnlyDataReceiver) -> a
    void subscribeInstantaneousCadenceEvent(com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$IInstantaneousCadenceReceiver) -> a
    void subscribeRequestCalibrationMessageEvent$50e56f2b(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> a
    void subscribeRequestAutoZeroStatusEvent$13d6e0c9(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> b
    void subscribeCalculatedPowerEvent(com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$ICalculatedPowerReceiver) -> a
    void subscribeCalculatedTorqueEvent(com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$ICalculatedTorqueReceiver) -> a
    void subscribeCalculatedCrankCadenceEvent(com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$ICalculatedCrankCadenceReceiver) -> a
    void subscribeCalculatedWheelSpeedEvent(com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalculatedWheelSpeedReceiver) -> a
    void subscribeCalculatedWheelDistanceEvent(com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalculatedWheelDistanceReceiver) -> a
    void subscribeRequestMeasurementOutputDataEvent$7719b927(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> c
    void subscribeRequestCrankParametersEvent$50cfdba7(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> d
    java.lang.String access$000() -> c
    void access$100$3c8f575c(com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc,android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> a
    void access$200$59d73818(com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc,android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> b
    void access$300$17a2e8aa(com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc,android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> c
    void access$400$352591c8(com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc,android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> d
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$1 -> com.dsi.ant.plugins.antplus.pcc.a:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc this$0 -> a
    void run() -> run
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$2 -> com.dsi.ant.plugins.antplus.pcc.b:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc this$0 -> a
    void run() -> run
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$3 -> com.dsi.ant.plugins.antplus.pcc.c:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc this$0 -> a
    void run() -> run
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$4 -> com.dsi.ant.plugins.antplus.pcc.d:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc this$0 -> a
    void run() -> run
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$AutoZeroStatus -> com.dsi.ant.plugins.antplus.pcc.e:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$AutoZeroStatus OFF -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$AutoZeroStatus ON -> b
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$AutoZeroStatus NOT_SUPPORTED -> c
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$AutoZeroStatus INVALID -> d
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$AutoZeroStatus UNKNOWN -> e
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$AutoZeroStatus UNRECOGNIZED -> f
    int intValue -> g
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$AutoZeroStatus[] $VALUES -> h
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$AutoZeroStatus[] values() -> values
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$AutoZeroStatus valueOf(java.lang.String) -> valueOf
    int getIntValue() -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$AutoZeroStatus getValueFromInt(int) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalculatedWheelDistanceReceiver -> com.dsi.ant.plugins.antplus.pcc.f:
    java.math.BigDecimal wheelCircumference -> a
    java.math.BigDecimal initialDistanceZeroVal -> b
    void onNewCalculatedWheelDistance(long,java.util.EnumSet,com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource,java.math.BigDecimal) -> a
    void onNewRawCalculatedWheelDistance(long,java.util.EnumSet,com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource,java.math.BigDecimal) -> b
    void access$600(com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalculatedWheelDistanceReceiver,long,java.util.EnumSet,com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource,java.math.BigDecimal) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalculatedWheelSpeedReceiver -> com.dsi.ant.plugins.antplus.pcc.g:
    java.math.BigDecimal wheelCircumference -> a
    void onNewCalculatedWheelSpeed(long,java.util.EnumSet,com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource,java.math.BigDecimal) -> a
    void onNewRawCalculatedWheelSpeed(long,java.util.EnumSet,com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource,java.math.BigDecimal) -> b
    void access$500(com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalculatedWheelSpeedReceiver,long,java.util.EnumSet,com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource,java.math.BigDecimal) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId -> com.dsi.ant.plugins.antplus.pcc.h:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId GENERAL_CALIBRATION_SUCCESS -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId GENERAL_CALIBRATION_FAIL -> b
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId CTF_MESSAGE -> c
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId CTF_ZERO_OFFSET -> d
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId CTF_SLOPE_ACK -> e
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId CTF_SERIAL_NUMBER_ACK -> f
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId CAPABILITIES -> g
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId CUSTOM_CALIBRATION_RESPONSE -> h
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId CUSTOM_CALIBRATION_UPDATE_SUCCESS -> i
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId INVALID -> j
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId UNRECOGNIZED -> k
    int intValue -> l
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId[] $VALUES -> m
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId[] values() -> values
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId valueOf(java.lang.String) -> valueOf
    int getIntValue() -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId getValueFromInt(int) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationMessage -> com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationMessage:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationId calibrationId -> a
    java.lang.Integer calibrationData -> b
    java.lang.Integer ctfOffset -> c
    byte[] manufacturerSpecificData -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationMessage$1 -> com.dsi.ant.plugins.antplus.pcc.i:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationMessage createFromParcel(android.os.Parcel) -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CalibrationMessage[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankLengthStatus -> com.dsi.ant.plugins.antplus.pcc.j:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankLengthStatus INVALID_CRANK_LENGTH -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankLengthStatus DEFAULT_USED -> b
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankLengthStatus SET_MANUALLY -> c
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankLengthStatus SET_AUTOMATICALLY -> d
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankLengthStatus[] $VALUES -> e
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankLengthStatus[] values() -> values
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankLengthStatus valueOf(java.lang.String) -> valueOf
    int getIntValue() -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankLengthStatus getValueFromInt(int) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankParameters -> com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankParameters:
    java.math.BigDecimal fullCrankLength -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankLengthStatus crankLengthStatus -> b
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorSoftwareMismatchStatus sensorSoftwareMismatchStatus -> c
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorAvailabilityStatus sensorAvailabilityStatus -> d
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CustomCalibrationStatus customCalibrationStatus -> e
    boolean autoCrankLengthSupport -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankParameters$1 -> com.dsi.ant.plugins.antplus.pcc.k:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankParameters createFromParcel(android.os.Parcel) -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CrankParameters[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CustomCalibrationStatus -> com.dsi.ant.plugins.antplus.pcc.l:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CustomCalibrationStatus UNDEFINED -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CustomCalibrationStatus CUSTOM_CALIBRATION_NOT_REQUIRED -> b
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CustomCalibrationStatus CUSTOM_CALIBRATION_REQUIRED -> c
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CustomCalibrationStatus[] $VALUES -> d
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CustomCalibrationStatus[] values() -> values
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CustomCalibrationStatus valueOf(java.lang.String) -> valueOf
    int getIntValue() -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$CustomCalibrationStatus getValueFromInt(int) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource -> com.dsi.ant.plugins.antplus.pcc.m:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource POWER_ONLY_DATA -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource WHEEL_TORQUE_DATA -> b
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource CRANK_TORQUE_DATA -> c
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource CTF_DATA -> d
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource COAST_OR_STOP_DETECTED -> e
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource INITIAL_VALUE_POWER_ONLY_DATA -> f
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource INITIAL_VALUE_WHEEL_TORQUE_DATA -> g
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource INITIAL_VALUE_CRANK_TORQUE_DATA -> h
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource INITIAL_VALUE_CTF_DATA -> i
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource INVALID -> j
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource INVALID_CTF_CAL_REQ -> k
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource UNRECOGNIZED -> l
    int intValue -> m
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource[] $VALUES -> n
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource[] values() -> values
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource valueOf(java.lang.String) -> valueOf
    int getIntValue() -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource getValueFromInt(int) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$ICalculatedCrankCadenceReceiver -> com.dsi.ant.plugins.antplus.pcc.n:
    com.ridelogger.listners.Power$1 this$1 -> a
    void onNewCalculatedCrankCadence(long,java.util.EnumSet,com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource,java.math.BigDecimal) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$ICalculatedPowerReceiver -> com.dsi.ant.plugins.antplus.pcc.o:
    com.ridelogger.listners.Power$1 this$1 -> a
    void onNewCalculatedPower(long,java.util.EnumSet,com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource,java.math.BigDecimal) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$ICalculatedTorqueReceiver -> com.dsi.ant.plugins.antplus.pcc.p:
    com.ridelogger.listners.Power$1 this$1 -> a
    void onNewCalculatedTorque(long,java.util.EnumSet,com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource,java.math.BigDecimal) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$IInstantaneousCadenceReceiver -> com.dsi.ant.plugins.antplus.pcc.q:
    com.ridelogger.listners.Power$1 this$1 -> a
    void onNewInstantaneousCadence(long,java.util.EnumSet,com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource,int) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$IRawPowerOnlyDataReceiver -> com.dsi.ant.plugins.antplus.pcc.r:
    com.ridelogger.listners.Power$1 this$1 -> a
    void onNewRawPowerOnlyData(long,java.util.EnumSet,long,int,long) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorAvailabilityStatus -> com.dsi.ant.plugins.antplus.pcc.s:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorAvailabilityStatus UNDEFINED -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorAvailabilityStatus LEFT_SENSOR_PRESENT -> b
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorAvailabilityStatus RIGHT_SENSOR_PRESENT -> c
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorAvailabilityStatus LEFT_AND_RIGHT_SENSOR_PRESENT -> d
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorAvailabilityStatus[] $VALUES -> e
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorAvailabilityStatus[] values() -> values
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorAvailabilityStatus valueOf(java.lang.String) -> valueOf
    int getIntValue() -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorAvailabilityStatus getValueFromInt(int) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorSoftwareMismatchStatus -> com.dsi.ant.plugins.antplus.pcc.t:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorSoftwareMismatchStatus UNDEFINED -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorSoftwareMismatchStatus MISMATCH_RIGHT_SENSOR_OLDER -> b
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorSoftwareMismatchStatus MISMATCH_LEFT_SENSOR_OLDER -> c
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorSoftwareMismatchStatus SW_MATCHES -> d
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorSoftwareMismatchStatus[] $VALUES -> e
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorSoftwareMismatchStatus[] values() -> values
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorSoftwareMismatchStatus valueOf(java.lang.String) -> valueOf
    int getIntValue() -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$SensorSoftwareMismatchStatus getValueFromInt(int) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusBloodPressurePcc -> com.dsi.ant.plugins.antplus.pcc.AntPlusBloodPressurePcc:
    java.lang.String TAG -> k
    int getRequiredServiceVersionForBind() -> a
    android.content.Intent getServiceBindIntent() -> b
    void handlePluginEvent(android.os.Message) -> a
    java.lang.String access$000() -> c
com.dsi.ant.plugins.antplus.pcc.AntPlusBloodPressurePcc$BloodPressureMeasurement -> com.dsi.ant.plugins.antplus.pcc.AntPlusBloodPressurePcc$BloodPressureMeasurement:
    java.util.GregorianCalendar timestamp_UTC -> a
    java.lang.Integer systolicPressure -> b
    java.lang.Integer diastolicPressure -> c
    java.lang.Integer meanArterialPressure -> d
    java.lang.Integer map3SampleMean -> e
    java.lang.Integer mapMorningValues -> f
    java.lang.Integer mapEveningValues -> g
    java.lang.Integer heartRate -> h
    com.garmin.fit.HrType heartRateType -> i
    com.garmin.fit.BpStatus bloodPressureStatus -> j
    java.lang.Integer userProfileIndex -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.dsi.ant.plugins.antplus.pcc.AntPlusBloodPressurePcc$BloodPressureMeasurement$1 -> com.dsi.ant.plugins.antplus.pcc.u:
    com.dsi.ant.plugins.antplus.pcc.AntPlusBloodPressurePcc$BloodPressureMeasurement createFromParcel(android.os.Parcel) -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusBloodPressurePcc$BloodPressureMeasurement[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dsi.ant.plugins.antplus.pcc.AntPlusGeocachePcc -> com.dsi.ant.plugins.antplus.pcc.AntPlusGeocachePcc:
    java.lang.String TAG -> k
    int getRequiredServiceVersionForBind() -> a
    android.content.Intent getServiceBindIntent() -> b
    void handlePluginEvent(android.os.Message) -> a
    java.lang.String access$000() -> c
com.dsi.ant.plugins.antplus.pcc.AntPlusGeocachePcc$GeocacheDeviceData -> com.dsi.ant.plugins.antplus.pcc.AntPlusGeocachePcc$GeocacheDeviceData:
    int deviceId -> a
    int hardwareRevision -> b
    int manufacturerID -> c
    int modelNumber -> d
    int softwareRevision -> e
    long serialNumber -> f
    long cumulativeOperatingTime -> g
    java.math.BigDecimal batteryVoltage -> h
    com.dsi.ant.plugins.antplus.pcc.defines.BatteryStatus batteryStatus -> i
    int cumulativeOperatingTimeResolution -> j
    com.dsi.ant.plugins.antplus.pcc.AntPlusGeocachePcc$ProgrammableGeocacheDeviceData programmableData -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.dsi.ant.plugins.antplus.pcc.AntPlusGeocachePcc$GeocacheDeviceData$1 -> com.dsi.ant.plugins.antplus.pcc.v:
    com.dsi.ant.plugins.antplus.pcc.AntPlusGeocachePcc$GeocacheDeviceData createFromParcel(android.os.Parcel) -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusGeocachePcc$GeocacheDeviceData[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dsi.ant.plugins.antplus.pcc.AntPlusGeocachePcc$ProgrammableGeocacheDeviceData -> com.dsi.ant.plugins.antplus.pcc.AntPlusGeocachePcc$ProgrammableGeocacheDeviceData:
    java.lang.String identificationString -> a
    java.lang.Long PIN -> b
    java.math.BigDecimal latitude -> c
    java.math.BigDecimal longitude -> d
    java.lang.String hintString -> e
    java.util.GregorianCalendar lastVisitTimestamp -> f
    java.lang.Integer numberOfVisits -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.dsi.ant.plugins.antplus.pcc.AntPlusGeocachePcc$ProgrammableGeocacheDeviceData$1 -> com.dsi.ant.plugins.antplus.pcc.w:
    com.dsi.ant.plugins.antplus.pcc.AntPlusGeocachePcc$ProgrammableGeocacheDeviceData createFromParcel(android.os.Parcel) -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusGeocachePcc$ProgrammableGeocacheDeviceData[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc -> com.dsi.ant.plugins.antplus.pcc.x:
    com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$IHeartRateDataReceiver mHeartRateDataReceiver -> k
    com.dsi.ant.plugins.internal.compatibility.LegacyHeartRateCompat mCompat -> l
    int getRequiredServiceVersionForBind() -> a
    com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle requestAccess(android.content.Context,int,int,com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IPluginAccessResultReceiver,com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IDeviceStateChangeReceiver) -> a
    android.content.Intent getServiceBindIntent() -> b
    void handlePluginEvent(android.os.Message) -> a
    void subscribeHeartRateDataEvent(com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$IHeartRateDataReceiver) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$DataState -> com.dsi.ant.plugins.antplus.pcc.y:
    com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$DataState LIVE_DATA -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$DataState INITIAL_VALUE -> b
    com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$DataState ZERO_DETECTED -> c
    com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$DataState UNRECOGNIZED -> d
    int intValue -> e
    com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$DataState[] $VALUES -> f
    com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$DataState[] values() -> values
    com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$DataState valueOf(java.lang.String) -> valueOf
    int getIntValue() -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$DataState getValueFromInt(int) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$IHeartRateDataReceiver -> com.dsi.ant.plugins.antplus.pcc.z:
    void onNewHeartRateData(long,java.util.EnumSet,int,long,java.math.BigDecimal,com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$DataState) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusWatchDownloaderPcc -> com.dsi.ant.plugins.antplus.pcc.AntPlusWatchDownloaderPcc:
    java.lang.String TAG -> k
    java.util.HashMap mListenForNewActivitiesDeviceToReceiverMap -> l
    int getRequiredServiceVersionForBind() -> a
    android.content.Intent getServiceBindIntent() -> b
    void handlePluginEvent(android.os.Message) -> a
    java.lang.String access$100() -> c
com.dsi.ant.plugins.antplus.pcc.AntPlusWatchDownloaderPcc$DeviceInfo -> com.dsi.ant.plugins.antplus.pcc.AntPlusWatchDownloaderPcc$DeviceInfo:
    java.util.UUID deviceUUID -> a
    java.lang.String savedDisplayName -> b
    int antFsManufacturerId -> c
    int antFsDeviceType -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
com.dsi.ant.plugins.antplus.pcc.AntPlusWatchDownloaderPcc$DeviceInfo$1 -> com.dsi.ant.plugins.antplus.pcc.aa:
    com.dsi.ant.plugins.antplus.pcc.AntPlusWatchDownloaderPcc$DeviceInfo createFromParcel(android.os.Parcel) -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusWatchDownloaderPcc$DeviceInfo[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc -> com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc:
    java.lang.String TAG -> l
    int getRequiredServiceVersionForBind() -> a
    android.content.Intent getServiceBindIntent() -> b
    void handlePluginEvent(android.os.Message) -> a
    java.lang.String access$000() -> c
com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$1 -> com.dsi.ant.plugins.antplus.pcc.ab:
    int[] $SwitchMap$com$dsi$ant$plugins$antplus$pcc$AntPlusWeightScalePcc$Gender -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$AdvancedMeasurement -> com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$AdvancedMeasurement:
    java.math.BigDecimal bodyWeight -> a
    java.math.BigDecimal hydrationPercentage -> b
    java.math.BigDecimal bodyFatPercentage -> c
    java.math.BigDecimal muscleMass -> d
    java.math.BigDecimal boneMass -> e
    java.math.BigDecimal activeMetabolicRate -> f
    java.math.BigDecimal basalMetabolicRate -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$AdvancedMeasurement$1 -> com.dsi.ant.plugins.antplus.pcc.ac:
    com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$AdvancedMeasurement createFromParcel(android.os.Parcel) -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$AdvancedMeasurement[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$Gender -> com.dsi.ant.plugins.antplus.pcc.ad:
    com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$Gender FEMALE -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$Gender MALE -> b
    com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$Gender UNASSIGNED -> c
    com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$Gender[] $VALUES -> d
    com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$Gender[] values() -> values
    com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$Gender valueOf(java.lang.String) -> valueOf
    int getIntValue() -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$Gender getValueFromInt(int) -> a
com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$UserProfile -> com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$UserProfile:
    int userProfileID -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$Gender gender -> b
    int age -> c
    int height -> d
    int activityLevel -> e
    boolean lifetimeAthlete -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$UserProfile$1 -> com.dsi.ant.plugins.antplus.pcc.ae:
    com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$UserProfile createFromParcel(android.os.Parcel) -> a
    com.dsi.ant.plugins.antplus.pcc.AntPlusWeightScalePcc$UserProfile[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dsi.ant.plugins.antplus.pcc.controls.pccbase.AntPlusBaseRemoteControlPcc -> com.dsi.ant.plugins.antplus.pcc.controls.pccbase.AntPlusBaseRemoteControlPcc:
    java.lang.String TAG -> l
    java.lang.String access$000() -> c
com.dsi.ant.plugins.antplus.pcc.controls.pccbase.AntPlusBaseRemoteControlPcc$ControlDeviceCapabilities -> com.dsi.ant.plugins.antplus.pcc.controls.pccbase.AntPlusBaseRemoteControlPcc$ControlDeviceCapabilities:
    boolean isMaximumNumberRemotesConnected -> a
    boolean isAudioControlSupported -> b
    boolean isGenericControlSupported -> c
    boolean isVideoControlSupported -> d
    boolean isBurstCommandSupported -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.dsi.ant.plugins.antplus.pcc.controls.pccbase.AntPlusBaseRemoteControlPcc$ControlDeviceCapabilities$1 -> com.dsi.ant.plugins.antplus.pcc.controls.pccbase.a:
    com.dsi.ant.plugins.antplus.pcc.controls.pccbase.AntPlusBaseRemoteControlPcc$ControlDeviceCapabilities createFromParcel(android.os.Parcel) -> a
    com.dsi.ant.plugins.antplus.pcc.controls.pccbase.AntPlusBaseRemoteControlPcc$ControlDeviceCapabilities[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dsi.ant.plugins.antplus.pcc.defines.BatteryStatus -> com.dsi.ant.plugins.antplus.pcc.a.a:
    com.dsi.ant.plugins.antplus.pcc.defines.BatteryStatus NEW -> b
    com.dsi.ant.plugins.antplus.pcc.defines.BatteryStatus GOOD -> c
    com.dsi.ant.plugins.antplus.pcc.defines.BatteryStatus OK -> d
    com.dsi.ant.plugins.antplus.pcc.defines.BatteryStatus LOW -> e
    com.dsi.ant.plugins.antplus.pcc.defines.BatteryStatus CRITICAL -> f
    com.dsi.ant.plugins.antplus.pcc.defines.BatteryStatus INVALID -> a
    com.dsi.ant.plugins.antplus.pcc.defines.BatteryStatus UNRECOGNIZED -> g
    int intValue -> h
    com.dsi.ant.plugins.antplus.pcc.defines.BatteryStatus[] $VALUES -> i
    com.dsi.ant.plugins.antplus.pcc.defines.BatteryStatus[] values() -> values
    com.dsi.ant.plugins.antplus.pcc.defines.BatteryStatus valueOf(java.lang.String) -> valueOf
    int getIntValue() -> a
    com.dsi.ant.plugins.antplus.pcc.defines.BatteryStatus getValueFromInt(int) -> a
com.dsi.ant.plugins.antplus.pcc.defines.DeviceState -> com.dsi.ant.plugins.antplus.pcc.a.b:
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceState DEAD -> a
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceState CLOSED -> b
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceState SEARCHING -> c
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceState TRACKING -> d
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceState PROCESSING_REQUEST -> e
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceState UNRECOGNIZED -> f
    int intValue -> g
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceState[] $VALUES -> h
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceState[] values() -> values
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceState valueOf(java.lang.String) -> valueOf
    int getIntValue() -> a
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceState getValueFromInt(int) -> a
com.dsi.ant.plugins.antplus.pcc.defines.DeviceType -> com.dsi.ant.plugins.antplus.pcc.a.c:
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType BIKE_POWER -> a
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType CONTROLLABLE_DEVICE -> b
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType FITNESS_EQUIPMENT -> c
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType BLOOD_PRESSURE -> d
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType GEOCACHE -> e
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType ENVIRONMENT -> f
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType WEIGHT_SCALE -> g
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType HEARTRATE -> h
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType BIKE_SPDCAD -> i
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType BIKE_CADENCE -> j
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType BIKE_SPD -> k
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType STRIDE_SDM -> l
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType UNKNOWN -> m
    int intValue -> n
    java.lang.String name -> o
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType[] $VALUES -> p
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType[] values() -> values
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType valueOf(java.lang.String) -> valueOf
    int getIntValue() -> a
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType getValueFromInt(int) -> a
    java.lang.String toString() -> toString
com.dsi.ant.plugins.antplus.pcc.defines.EventFlag -> com.dsi.ant.plugins.antplus.pcc.a.d:
    com.dsi.ant.plugins.antplus.pcc.defines.EventFlag UNRECOGNIZED_FLAG_PRESENT -> a
    com.dsi.ant.plugins.antplus.pcc.defines.EventFlag WAS_BUFFERED -> b
    long longValue -> c
    com.dsi.ant.plugins.antplus.pcc.defines.EventFlag[] $VALUES -> d
    com.dsi.ant.plugins.antplus.pcc.defines.EventFlag[] values() -> values
    com.dsi.ant.plugins.antplus.pcc.defines.EventFlag valueOf(java.lang.String) -> valueOf
    long getLongValue() -> a
    java.util.EnumSet getEventFlagsFromLong(long) -> a
com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult -> com.dsi.ant.plugins.antplus.pcc.a.e:
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult SUCCESS -> a
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult USER_CANCELLED -> b
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult CHANNEL_NOT_AVAILABLE -> g
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult OTHER_FAILURE -> c
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult DEPENDENCY_NOT_INSTALLED -> d
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult DEVICE_ALREADY_IN_USE -> h
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult SEARCH_TIMEOUT -> e
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult ALREADY_SUBSCRIBED -> i
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult BAD_PARAMS -> j
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult ADAPTER_NOT_DETECTED -> k
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult UNRECOGNIZED -> f
    int intValue -> l
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult[] $VALUES -> m
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult[] values() -> values
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult valueOf(java.lang.String) -> valueOf
    int getIntValue() -> a
    com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult getValueFromInt(int) -> a
com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc -> com.dsi.ant.plugins.antplus.pccbase.a:
    java.lang.String TAG -> k
    java.lang.String lastMissingDependencyPkgName -> a
    java.lang.String lastMissingDependencyName -> b
    android.content.ServiceConnection serviceBindConn -> l
    android.os.HandlerThread mPluginMsgHandlerThread -> m
    android.os.Handler$Callback mPluginMsgHandler -> n
    android.os.HandlerThread mPluginEventHandlerThread -> o
    android.os.Handler mPluginEventHandler -> p
    android.os.Handler$Callback mPluginEventHandlerCb -> q
    java.util.UUID mAccessToken -> r
    android.os.Messenger mPluginMsgr -> s
    java.util.concurrent.locks.ReentrantLock mPluginCommLock -> t
    java.util.concurrent.Exchanger mPluginCommMsgExch -> c
    java.util.concurrent.CyclicBarrier mPluginCommProcessingBarrier -> d
    boolean isInitialized -> e
    java.util.concurrent.CountDownLatch deviceInitializedLatch -> f
    android.content.Context mOwnerContext -> u
    com.dsi.ant.plugins.internal.pluginsipc.AntPluginDeviceDbProvider$DeviceDbDeviceInfo deviceInfo -> v
    java.lang.Integer mCachedState -> g
    java.lang.Thread mCurrentCmdThread -> w
    int reportedServiceVersion -> h
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IDeviceStateChangeReceiver mStateChangeReceiver -> i
    com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle mReleaseHandle -> j
    boolean isReleased -> x
    boolean mIsPluginServiceBound -> y
    java.lang.Object mPluginServiceBindChange_LOCK -> z
    android.content.Intent getServiceBindIntent() -> b
    int getRequiredServiceVersionForBind() -> a
    void handlePluginEvent(android.os.Message) -> a
    com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle requestAccess_Helper_AsyncSearchByDevNumber(android.content.Context,int,int,com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc,com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IPluginAccessResultReceiver,com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IDeviceStateChangeReceiver) -> a
    com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle requestAccess_Helper_Main(android.content.Context,android.os.Bundle,com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc,com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$RequestAccessResultHandler,com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IPluginAccessResultReceiver,com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IDeviceStateChangeReceiver) -> a
    void requestAccess_Helper_SubMain(android.content.Context,android.os.Bundle,com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc,android.os.Handler) -> a
    void bindAndRequest(android.content.Context,android.os.Bundle,android.os.Handler) -> a
    void sendDependencyNotInstalledMessage(android.os.Messenger,java.lang.String,java.lang.String) -> a
    android.os.Messenger getPluginMsgReceiver() -> c
    void handleNonCmdPluginMessage(android.os.Message) -> b
    void init(com.dsi.ant.plugins.internal.pluginsipc.AntPluginDeviceDbProvider$DeviceDbDeviceInfo,java.util.UUID,android.os.Messenger,int,int) -> a
    int getAntDeviceNumber() -> d
    android.os.Message createCmdMsg(int,android.os.Bundle) -> a
    android.os.Message sendPluginCommand(android.os.Message) -> c
    android.os.Message sendPluginCommandInternal(android.os.Message) -> d
    boolean subscribeToEvent(int) -> a
    void unsubscribeFromEvent(int) -> b
    void notifyBindAndRequestFailed(android.os.Bundle) -> a
    void handleConnectionBroke(java.lang.String) -> a
    void releaseToken() -> e
    void sendReleaseCommand(int) -> c
    void closePluginConnection() -> f
    void bindPluginService(android.content.Intent,android.os.Bundle) -> a
    void unbindPluginService() -> h
    java.lang.String access$000() -> g
    void access$100(com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc,android.os.Bundle) -> a
    java.util.concurrent.locks.ReentrantLock access$200(com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc) -> a
com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$1 -> com.dsi.ant.plugins.antplus.pccbase.b:
    android.os.Bundle val$b -> a
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc this$0 -> b
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$2 -> com.dsi.ant.plugins.antplus.pccbase.c:
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$3 -> com.dsi.ant.plugins.antplus.pccbase.d:
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IDeviceStateChangeReceiver -> com.dsi.ant.plugins.antplus.pccbase.e:
    void onDeviceStateChange(com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IPluginAccessResultReceiver -> com.dsi.ant.plugins.antplus.pccbase.f:
    void onResultReceived(com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc,com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult,com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$RequestAccessResultHandler -> com.dsi.ant.plugins.antplus.pccbase.g:
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc retPccObject -> a
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IPluginAccessResultReceiver resultReceiver -> b
    void setReturnInfo(com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc,com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IPluginAccessResultReceiver) -> a
    void handleMessage(android.os.Message) -> handleMessage
    boolean handleRequestAccessResult(android.os.Message) -> a
    void handleRequestAccessFailed(java.lang.String,com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult) -> a
com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$RequestAccessResultHandler_AsyncSearchByDevNumber -> com.dsi.ant.plugins.antplus.pccbase.h:
    boolean handleRequestAccessResult(android.os.Message) -> a
com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$StandardReleaseHandle -> com.dsi.ant.plugins.antplus.pccbase.i:
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc this$0 -> f
    void requestCancelled() -> a
com.dsi.ant.plugins.antplus.pccbase.AntPlusBikeSpdCadCommonPcc -> com.dsi.ant.plugins.antplus.pccbase.AntPlusBikeSpdCadCommonPcc:
    java.lang.String TAG -> k
    java.lang.String access$000() -> c
com.dsi.ant.plugins.antplus.pccbase.AntPlusBikeSpdCadCommonPcc$MultiDeviceSearchSpdCadResult -> com.dsi.ant.plugins.antplus.pccbase.AntPlusBikeSpdCadCommonPcc$MultiDeviceSearchSpdCadResult:
    com.dsi.ant.plugins.internal.pluginsipc.AntPluginDeviceDbProvider$DeviceDbDeviceInfo mCadenceInfo -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.dsi.ant.plugins.antplus.pccbase.AntPlusBikeSpdCadCommonPcc$MultiDeviceSearchSpdCadResult$1 -> com.dsi.ant.plugins.antplus.pccbase.j:
    com.dsi.ant.plugins.antplus.pccbase.AntPlusBikeSpdCadCommonPcc$MultiDeviceSearchSpdCadResult[] newArray(int) -> a
    com.dsi.ant.plugins.antplus.pccbase.AntPlusBikeSpdCadCommonPcc$MultiDeviceSearchSpdCadResult createFromParcel(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dsi.ant.plugins.antplus.pccbase.AntPlusCommonPcc -> com.dsi.ant.plugins.antplus.pccbase.k:
    java.lang.String TAG -> l
    java.util.concurrent.Semaphore mCommandLock -> k
    void handlePluginEvent(android.os.Message) -> a
com.dsi.ant.plugins.antplus.pccbase.AntPlusLegacyCommonPcc -> com.dsi.ant.plugins.antplus.pccbase.l:
    java.lang.String TAG -> k
    void handlePluginEvent(android.os.Message) -> a
com.dsi.ant.plugins.antplus.pccbase.AsyncScanController -> com.dsi.ant.plugins.antplus.pccbase.AsyncScanController:
    java.lang.String TAG -> a
    java.lang.String access$000() -> a
com.dsi.ant.plugins.antplus.pccbase.AsyncScanController$AsyncScanResultDeviceInfo -> com.dsi.ant.plugins.antplus.pccbase.AsyncScanController$AsyncScanResultDeviceInfo:
    java.util.UUID scanResultInternalIdentifier -> a
    boolean isAlreadyConnected -> b
    com.dsi.ant.plugins.internal.pluginsipc.AntPluginDeviceDbProvider$DeviceDbDeviceInfo deviceInfo -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.dsi.ant.plugins.antplus.pccbase.AsyncScanController$AsyncScanResultDeviceInfo$1 -> com.dsi.ant.plugins.antplus.pccbase.m:
    com.dsi.ant.plugins.antplus.pccbase.AsyncScanController$AsyncScanResultDeviceInfo createFromParcel(android.os.Parcel) -> a
    com.dsi.ant.plugins.antplus.pccbase.AsyncScanController$AsyncScanResultDeviceInfo[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch -> com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch:
    java.lang.String TAG -> a
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IPluginAccessResultReceiver mAccessResultReceiver -> b
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IDeviceStateChangeReceiver mStateChangeReceiver -> c
    com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$SearchPcc mPcc -> d
    com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$SearchCallbacks mCallbacks -> e
    android.support.v4.app.NotificationCompat$BuilderExtender mRssiCallback$2833d10 -> f
    void close() -> a
    java.lang.String access$000() -> b
    com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$SearchCallbacks access$100(com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch) -> a
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IPluginAccessResultReceiver access$400(com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch) -> b
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IDeviceStateChangeReceiver access$500(com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch) -> c
    android.support.v4.app.NotificationCompat$BuilderExtender access$600$555f68a5(com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch) -> d
    com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$SearchPcc access$700(com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch) -> e
com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$1 -> com.dsi.ant.plugins.antplus.pccbase.n:
    com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch this$0 -> a
    void onResultReceived(com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$SearchPcc,com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult,com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
    void onResultReceived(com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc,com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult,com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$MultiDeviceSearchResult -> com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$MultiDeviceSearchResult:
    boolean mAlreadyConnected -> a
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType mDeviceType -> b
    com.dsi.ant.plugins.internal.pluginsipc.AntPluginDeviceDbProvider$DeviceDbDeviceInfo mInfo -> c
    int resultID -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.dsi.ant.plugins.antplus.pcc.defines.DeviceType getAntDeviceType() -> a
    int getAntDeviceNumber() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$MultiDeviceSearchResult$1 -> com.dsi.ant.plugins.antplus.pccbase.o:
    com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$MultiDeviceSearchResult[] newArray(int) -> a
    com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$MultiDeviceSearchResult createFromParcel(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$SearchCallbacks -> com.dsi.ant.plugins.antplus.pccbase.p:
    com.ridelogger.SettingsActivity$AntFragment this$0 -> a
    void onDeviceFound(com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$MultiDeviceSearchResult) -> a
com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$SearchPcc -> com.dsi.ant.plugins.antplus.pccbase.q:
    com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch this$0 -> k
    void requestAccess(android.content.Context,android.os.Bundle) -> a
    android.content.Intent getServiceBindIntent() -> b
    int getRequiredServiceVersionForBind() -> a
    void handlePluginEvent(android.os.Message) -> a
    void access$300(com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$SearchPcc,android.content.Context,android.os.Bundle) -> a
com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$SearchReleaseHandle -> com.dsi.ant.plugins.antplus.pccbase.r:
    boolean successReceived -> f
    com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch this$0 -> g
    void requestCancelled() -> a
    boolean isActive() -> b
    void onDeviceStateChange(com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
    void onResultReceived(com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch$SearchPcc,com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult,com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
    void onResultReceived(com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc,com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult,com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle -> com.dsi.ant.plugins.antplus.pccbase.s:
    boolean isClosed -> a
    boolean resultSent -> b
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc receivedDevice -> f
    java.lang.Object stateLock -> c
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IPluginAccessResultReceiver mResultReceiver -> g
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IDeviceStateChangeReceiver mStateReceiver -> h
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IPluginAccessResultReceiver resultSink -> d
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IDeviceStateChangeReceiver stateSink -> e
    void close() -> c
    boolean isActive() -> b
    void requestCancelled() -> a
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc access$000(com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle) -> a
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc access$002(com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle,com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc) -> a
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IPluginAccessResultReceiver access$100(com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle) -> b
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IDeviceStateChangeReceiver access$200(com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle) -> c
com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle$1 -> com.dsi.ant.plugins.antplus.pccbase.t:
    com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle this$0 -> a
    void onResultReceived(com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc,com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult,com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle$2 -> com.dsi.ant.plugins.antplus.pccbase.u:
    boolean deadStateSent -> a
    com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle this$0 -> b
    void onDeviceStateChange(com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
com.dsi.ant.plugins.internal.compatibility.LegacyHeartRateCompat -> com.dsi.ant.plugins.internal.a.a:
    com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$IHeartRateDataReceiver mHeartRateDataReceiver -> a
    long mEstTimestamp -> b
    java.util.EnumSet mEventFlags -> c
    int mComputedHeartRate -> d
    long mHeartBeatCount -> e
    com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$DataState mDataState -> f
    void onNewHeartRateDataTimestamp(long,java.util.EnumSet,java.math.BigDecimal) -> a
    void onNewHeartRateData(long,java.util.EnumSet,int,long,java.math.BigDecimal,com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$DataState) -> a
com.dsi.ant.plugins.internal.pluginsipc.AntPluginDeviceDbProvider -> com.dsi.ant.plugins.internal.pluginsipc.AntPluginDeviceDbProvider:
    java.lang.String TAG -> a
    java.lang.String access$000() -> a
com.dsi.ant.plugins.internal.pluginsipc.AntPluginDeviceDbProvider$DeviceDbDeviceInfo -> com.dsi.ant.plugins.internal.pluginsipc.AntPluginDeviceDbProvider$DeviceDbDeviceInfo:
    int ipcVersionNumber -> d
    java.lang.Long device_dbId -> e
    java.lang.Long plugin_dbId -> f
    java.lang.Integer antDeviceNumber -> a
    java.lang.String visibleName -> b
    java.lang.Boolean isPreferredDevice -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.dsi.ant.plugins.internal.pluginsipc.AntPluginDeviceDbProvider$DeviceDbDeviceInfo$1 -> com.dsi.ant.plugins.internal.pluginsipc.a:
    com.dsi.ant.plugins.internal.pluginsipc.AntPluginDeviceDbProvider$DeviceDbDeviceInfo createFromParcel(android.os.Parcel) -> a
    com.dsi.ant.plugins.internal.pluginsipc.AntPluginDeviceDbProvider$DeviceDbDeviceInfo[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dsi.ant.plugins.utility.log.LogAnt -> com.dsi.ant.plugins.a.a.a:
    int DEBUG_LEVEL_DEFAULT -> a
    int sDebugLevel -> b
    java.lang.String sVersion -> c
    void setDebugLevel(int,android.content.Context) -> a
    void setDebugLevel(com.dsi.ant.plugins.utility.log.LogAnt$DebugLevel,android.content.Context) -> a
    int getDebugLevel(android.content.Context) -> a
    void setVersion(java.lang.String) -> a
    void e(java.lang.String,java.lang.String) -> a
    void w(java.lang.String,java.lang.String) -> b
    void i(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void v(java.lang.String,java.lang.String) -> e
com.dsi.ant.plugins.utility.log.LogAnt$DebugLevel -> com.dsi.ant.plugins.a.a.b:
    com.dsi.ant.plugins.utility.log.LogAnt$DebugLevel NONE -> a
    com.dsi.ant.plugins.utility.log.LogAnt$DebugLevel ERROR -> b
    com.dsi.ant.plugins.utility.log.LogAnt$DebugLevel WARNING -> c
    com.dsi.ant.plugins.utility.log.LogAnt$DebugLevel INFO -> d
    com.dsi.ant.plugins.utility.log.LogAnt$DebugLevel DEBUG -> e
    com.dsi.ant.plugins.utility.log.LogAnt$DebugLevel VERBOSE -> f
    com.dsi.ant.plugins.utility.log.LogAnt$DebugLevel[] $VALUES -> g
    com.dsi.ant.plugins.utility.log.LogAnt$DebugLevel[] values() -> values
    com.dsi.ant.plugins.utility.log.LogAnt$DebugLevel valueOf(java.lang.String) -> valueOf
com.dsi.ant.plugins.utility.parcel.ParcelPacker -> com.dsi.ant.plugins.a.b.a:
    android.os.Parcel mParcel -> a
    int mStartIndex -> b
    void finish() -> a
com.dsi.ant.plugins.utility.parcel.ParcelUnpacker -> com.dsi.ant.plugins.a.b.b:
    android.os.Parcel mParcel -> a
    int mEndIndex -> b
    void finish() -> a
com.garmin.fit.BpStatus -> com.a.a.a:
    com.garmin.fit.BpStatus NO_ERROR -> a
    com.garmin.fit.BpStatus ERROR_INCOMPLETE_DATA -> b
    com.garmin.fit.BpStatus ERROR_NO_MEASUREMENT -> c
    com.garmin.fit.BpStatus ERROR_DATA_OUT_OF_RANGE -> d
    com.garmin.fit.BpStatus ERROR_IRREGULAR_HEART_RATE -> e
    com.garmin.fit.BpStatus INVALID -> f
    com.garmin.fit.BpStatus[] $VALUES -> g
    com.garmin.fit.BpStatus[] values() -> values
    com.garmin.fit.BpStatus valueOf(java.lang.String) -> valueOf
com.garmin.fit.HrType -> com.a.a.b:
    com.garmin.fit.HrType NORMAL -> a
    com.garmin.fit.HrType IRREGULAR -> b
    com.garmin.fit.HrType INVALID -> c
    com.garmin.fit.HrType[] $VALUES -> d
    com.garmin.fit.HrType[] values() -> values
    com.garmin.fit.HrType valueOf(java.lang.String) -> valueOf
com.ridelogger.CurrentValuesAdapter -> com.ridelogger.a:
    com.ridelogger.StartActivity context -> a
    int[] keys -> b
    java.lang.String[] values -> c
    java.lang.String[] keyLabels -> d
    int size -> e
    boolean imperial -> f
    android.widget.GridView layout -> g
    void initKeys(java.util.Set) -> a
    void initKeyLables() -> a
    void initValues() -> b
    android.widget.RelativeLayout newRelativeLayout(int) -> a
    android.widget.TextView newValueTv(int) -> b
    android.widget.TextView newKeyTv(int) -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void update(float[]) -> a
    void setupWidth() -> c
    com.ridelogger.StartActivity access$000(com.ridelogger.CurrentValuesAdapter) -> a
    int access$102(com.ridelogger.CurrentValuesAdapter,int) -> a
    void access$200(com.ridelogger.CurrentValuesAdapter) -> b
    void access$300(com.ridelogger.CurrentValuesAdapter,java.util.Set) -> a
    void access$400(com.ridelogger.CurrentValuesAdapter) -> c
    void access$500(com.ridelogger.CurrentValuesAdapter) -> d
    android.widget.GridView access$600(com.ridelogger.CurrentValuesAdapter) -> e
    boolean access$702(com.ridelogger.CurrentValuesAdapter,boolean) -> a
com.ridelogger.CurrentValuesAdapter$1 -> com.ridelogger.b:
    com.ridelogger.CurrentValuesAdapter this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.ridelogger.GzipWriter -> com.ridelogger.c:
    void write(java.lang.String) -> a
    void write(float) -> a
    void write(java.lang.CharSequence) -> a
com.ridelogger.RideService -> com.ridelogger.RideService:
    java.lang.CharSequence[] KEYS -> a
    long startTime -> b
    float[] currentValues -> c
    android.os.Messenger mMessenger -> e
    boolean rideStarted -> f
    int sensor_index -> g
    java.lang.String emergencyNumbuer -> h
    java.util.Timer timer -> i
    java.util.Timer timerUI -> j
    com.ridelogger.listners.Base[] sensors -> k
    com.ridelogger.formats.BaseFormat fileFormat -> d
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
    void startRide() -> c
    void phoneCrash(double) -> a
    void phoneCrashConfirm() -> a
    void phoneStart() -> d
    void phoneStop() -> e
    void smsWithLocation(java.lang.String) -> a
    void phoneHome() -> b
    void smsHome(java.lang.String) -> b
    java.lang.String getLocationLink() -> f
    void stopRide() -> g
    java.util.Timer access$000(com.ridelogger.RideService) -> a
    java.util.Timer access$002(com.ridelogger.RideService,java.util.Timer) -> a
com.ridelogger.RideService$1 -> com.ridelogger.d:
    android.os.Messenger replyTo -> a
    com.ridelogger.RideService this$0 -> b
    void handleMessage(android.os.Message) -> handleMessage
com.ridelogger.RideService$1$1 -> com.ridelogger.e:
    com.ridelogger.RideService$1 this$1 -> a
    void run() -> run
com.ridelogger.RideService$2 -> com.ridelogger.f:
    com.ridelogger.RideService this$0 -> a
    void run() -> run
com.ridelogger.RideService$3 -> com.ridelogger.g:
    int[] $SwitchMap$com$dsi$ant$plugins$antplus$pcc$defines$DeviceType -> a
com.ridelogger.SettingsActivity -> com.ridelogger.SettingsActivity:
    java.util.ArrayList foundDevices -> a
    boolean isValidFragment(java.lang.String) -> isValidFragment
    void onBuildHeaders(java.util.List) -> onBuildHeaders
    android.app.ActivityManager$RunningServiceInfo getServiceRunning(java.lang.Class) -> a
    android.app.ActivityManager$RunningServiceInfo access$000(com.ridelogger.SettingsActivity,java.lang.Class) -> a
    java.util.ArrayList access$200() -> a
com.ridelogger.SettingsActivity$1 -> com.ridelogger.h:
    com.ridelogger.SettingsActivity this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.ridelogger.SettingsActivity$AntFragment -> com.ridelogger.SettingsActivity$AntFragment:
    com.dsi.ant.plugins.antplus.pccbase.MultiDeviceSearch mSearch -> a
    android.preference.MultiSelectListPreference mMultiSelectListPreference -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void initAntSearch() -> a
    void setupAnt() -> b
    void updateList(java.util.ArrayList) -> a
    void onDestroy() -> onDestroy
    android.preference.MultiSelectListPreference access$100(com.ridelogger.SettingsActivity$AntFragment) -> a
com.ridelogger.SettingsActivity$AntFragment$1 -> com.ridelogger.i:
    android.os.Handler val$handler -> b
    com.ridelogger.SettingsActivity$AntFragment this$0 -> a
    void run() -> run
com.ridelogger.SettingsActivity$AntFragment$1$1 -> com.ridelogger.j:
    com.ridelogger.SettingsActivity$AntFragment$1 this$1 -> a
    void run() -> run
com.ridelogger.SettingsActivity$AntFragment$1$2 -> com.ridelogger.k:
    com.ridelogger.SettingsActivity$AntFragment$1 this$1 -> a
    void run() -> run
com.ridelogger.SettingsActivity$GeneralFragment -> com.ridelogger.SettingsActivity$GeneralFragment:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
com.ridelogger.SettingsActivity$SensorsFragment -> com.ridelogger.SettingsActivity$SensorsFragment:
    void onCreate(android.os.Bundle) -> onCreate
com.ridelogger.StartActivity -> com.ridelogger.StartActivity:
    android.view.MenuItem startMenu -> e
    android.view.MenuItem stopMenu -> f
    android.content.ServiceConnection mConnection -> g
    com.ridelogger.CurrentValuesAdapter currentValuesAdapter -> h
    android.os.Handler mHandler -> i
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void setupSettings() -> f
    void stopRide() -> g
    void bindToService() -> h
    void unBindToService() -> i
    void updateValues(android.os.Bundle) -> b
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void startRide() -> j
    android.app.ActivityManager$RunningServiceInfo getServiceRunning(java.lang.Class) -> a
    void access$000(android.os.Bundle) -> a
    android.os.Handler access$100() -> e
com.ridelogger.StartActivity$1 -> com.ridelogger.l:
    void handleMessage(android.os.Message) -> handleMessage
com.ridelogger.StartActivity$2 -> com.ridelogger.m:
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ridelogger.formats.BaseFormat -> com.ridelogger.a.a:
    com.ridelogger.GzipWriter buf -> a
    com.ridelogger.RideService context -> b
    java.lang.String subExt -> c
    void createFile() -> a
    void writeHeader() -> b
    void writeValues() -> c
    void writeFooter() -> d
com.ridelogger.formats.JsonFormat -> com.ridelogger.a.b:
    void writeHeader() -> b
    void writeValues() -> c
    void writeFooter() -> d
com.ridelogger.listners.Ant -> com.ridelogger.b.a:
    com.dsi.ant.plugins.antplus.pccbase.PccReleaseHandle releaseHandle -> a
    int deviceNumber -> b
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IDeviceStateChangeReceiver mDeviceStateChangeReceiver -> c
    void requestAccess() -> a
    void onDestroy() -> b
com.ridelogger.listners.Ant$1 -> com.ridelogger.b.b:
    com.ridelogger.listners.Ant this$0 -> a
    void onDeviceStateChange(com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
com.ridelogger.listners.Base -> com.ridelogger.b.c:
    com.ridelogger.RideService context -> d
    void alterCurrentData(int,float) -> a
    void alterCurrentData(int[],float[]) -> a
    float getTs() -> a
    void onDestroy() -> b
    void zeroReadings() -> c
com.ridelogger.listners.Gps -> com.ridelogger.b.d:
com.ridelogger.listners.Gps$1 -> com.ridelogger.b.e:
    com.ridelogger.listners.Gps this$0 -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
com.ridelogger.listners.HeartRate -> com.ridelogger.b.f:
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IPluginAccessResultReceiver mResultReceiver -> e
    void requestAccess() -> a
    void zeroReadings() -> c
com.ridelogger.listners.HeartRate$1 -> com.ridelogger.b.g:
    com.ridelogger.listners.HeartRate this$0 -> a
    void onResultReceived(com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc,com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult,com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
    void onResultReceived(com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc,com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult,com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
com.ridelogger.listners.HeartRate$1$1 -> com.ridelogger.b.h:
    com.ridelogger.listners.HeartRate$1 this$1 -> a
    void onNewHeartRateData(long,java.util.EnumSet,int,long,java.math.BigDecimal,com.dsi.ant.plugins.antplus.pcc.AntPlusHeartRatePcc$DataState) -> a
com.ridelogger.listners.Power -> com.ridelogger.b.i:
    java.math.BigDecimal wheelCircumferenceInMeters -> e
    com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc$IPluginAccessResultReceiver mResultReceiver -> f
    void requestAccess() -> a
    void zeroReadings() -> c
    java.math.BigDecimal access$000(com.ridelogger.listners.Power) -> a
com.ridelogger.listners.Power$1 -> com.ridelogger.b.j:
    com.ridelogger.listners.Power this$0 -> a
    void onResultReceived(com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc,com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult,com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
    void onResultReceived(com.dsi.ant.plugins.antplus.pccbase.AntPluginPcc,com.dsi.ant.plugins.antplus.pcc.defines.RequestAccessResult,com.dsi.ant.plugins.antplus.pcc.defines.DeviceState) -> a
com.ridelogger.listners.Power$1$4 -> com.ridelogger.b.k:
    com.ridelogger.listners.Power$1 this$1 -> a
    void onNewCalculatedWheelSpeed(long,java.util.EnumSet,com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource,java.math.BigDecimal) -> a
com.ridelogger.listners.Power$1$5 -> com.ridelogger.b.l:
    com.ridelogger.listners.Power$1 this$1 -> a
    void onNewCalculatedWheelDistance(long,java.util.EnumSet,com.dsi.ant.plugins.antplus.pcc.AntPlusBikePowerPcc$DataSource,java.math.BigDecimal) -> a
com.ridelogger.listners.Sensors -> com.ridelogger.b.m:
    android.hardware.SensorEventListener luxListner -> a
    android.hardware.SensorEventListener accelListner -> b
    android.hardware.SensorEventListener pressListner -> c
    android.hardware.SensorEventListener tempListner -> e
    android.hardware.SensorEventListener fieldListner -> f
    void onDestroy() -> b
com.ridelogger.listners.Sensors$1 -> com.ridelogger.b.n:
    com.ridelogger.listners.Sensors this$0 -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.ridelogger.listners.Sensors$2 -> com.ridelogger.b.o:
    boolean crashed -> b
    java.util.Timer timer -> c
    double[] St -> d
    com.ridelogger.listners.Sensors this$0 -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    boolean access$002(com.ridelogger.listners.Sensors$2,boolean) -> a
com.ridelogger.listners.Sensors$2$1 -> com.ridelogger.b.p:
    com.ridelogger.listners.Sensors$2 this$1 -> a
    void run() -> run
com.ridelogger.listners.Sensors$2$2 -> com.ridelogger.b.q:
    com.ridelogger.listners.Sensors$2 this$1 -> a
    void run() -> run
com.ridelogger.listners.Sensors$3 -> com.ridelogger.b.r:
    com.ridelogger.listners.Sensors this$0 -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.ridelogger.listners.Sensors$4 -> com.ridelogger.b.s:
    com.ridelogger.listners.Sensors this$0 -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.ridelogger.listners.Sensors$5 -> com.ridelogger.b.t:
    com.ridelogger.listners.Sensors this$0 -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.ridelogger.listners.Sensors$6 -> com.ridelogger.b.u:
    com.ridelogger.listners.Sensors this$0 -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
